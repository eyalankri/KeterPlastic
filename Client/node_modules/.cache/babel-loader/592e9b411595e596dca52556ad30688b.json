{"remainingRequest":"D:\\Work\\Keter-plastic\\Client\\node_modules\\babel-loader\\lib\\index.js!D:\\Work\\Keter-plastic\\Client\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Work\\Keter-plastic\\Client\\src\\store\\store.js","dependencies":[{"path":"D:\\Work\\Keter-plastic\\Client\\src\\store\\store.js","mtime":1594133200647},{"path":"D:\\Work\\Keter-plastic\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Work\\Keter-plastic\\Client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Work\\Keter-plastic\\Client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vuex from 'vuex';\nimport Vue from 'vue';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {},\n  mutations: {},\n  actions: {},\n  getters: {\n    getTokenHeader: function getTokenHeader(state) {\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n    },\n    getTokenHeaderFormData: function getTokenHeaderFormData(state) {\n      return {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n    }\n  }\n});",{"version":3,"sources":["D:/Work/Keter-plastic/Client/src/store/store.js"],"names":["Vuex","Vue","use","Store","state","mutations","actions","getters","getTokenHeader","headers","getTokenHeaderFormData"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEAA,GAAG,CAACC,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAE1BC,EAAAA,KAAK,EAAE,EAFmB;AAK1BC,EAAAA,SAAS,EAAE,EALe;AAO1BC,EAAAA,OAAO,EAAE,EAPiB;AAU1BC,EAAAA,OAAO,EAAE;AAELC,IAAAA,cAAc,EAAE,wBAAAJ,KAAK,EAAI;AACrB,aAAO;AACHK,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADN,OAAP;AAMH,KATI;AAULC,IAAAA,sBAAsB,EAAE,gCAAAN,KAAK,EAAI;AAC7B,aAAO;AACHK,QAAAA,OAAO,EAAE;AAEL,0BAAgB;AAFX;AADN,OAAP;AAOH;AAlBI;AAViB,CAAf,CAAf","sourcesContent":["import Vuex from 'vuex'\r\nimport Vue from 'vue'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n\r\n    state: {       \r\n    },\r\n\r\n    mutations: {                              \r\n    },\r\n    actions: {                        \r\n    },\r\n\r\n    getters: {        \r\n        \r\n        getTokenHeader: state => {            \r\n            return {\r\n                headers: {                    \r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n\r\n            }\r\n        },\r\n        getTokenHeaderFormData: state => {            \r\n            return {\r\n                headers: {\r\n                    \r\n                    \"Content-Type\": \"multipart/form-data\"\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n})\r\n\r\n"]}]}