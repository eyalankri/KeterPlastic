{"remainingRequest":"D:\\Work\\Keter-plastic\\Client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\Keter-plastic\\Client\\src\\views\\List.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Work\\Keter-plastic\\Client\\src\\views\\List.vue","mtime":1591512325380},{"path":"D:\\Work\\Keter-plastic\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Work\\Keter-plastic\\Client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Work\\Keter-plastic\\Client\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"D:\\Work\\Keter-plastic\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Work\\Keter-plastic\\Client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Products from \"@/components/Products\";\r\nexport default {\r\n  components: { Products },\r\n  data: () => ({\r\n    arrAggrigatedData: null\r\n  }),\r\n  mounted(){\r\n    this.aggrigateData()\r\n  },\r\n  methods: {\r\n    aggrigateData() {\r\n      let products = (this.products = this.$store.state.products);\r\n      let stores = [...new Set(products.map(p => p.store))];\r\n\r\n      let arr = [];\r\n      stores.forEach(store => {\r\n        let sum = 0;\r\n        for (let i = 0; i < products.length; i++) {\r\n          if (store == products[i].store) {\r\n            if (products[i].selected) {\r\n              sum += products[i].priceUsd;\r\n            }\r\n          }\r\n        }\r\n        let obj = {\r\n          store: store,\r\n          sum: sum\r\n        };\r\n        arr.push(obj);\r\n      });\r\n      this.arrAggrigatedData = arr;\r\n    }\r\n  },\r\n  beforeCreate() {\r\n    this.$store.dispatch(\"changeShowSelectedProducts\", false);\r\n  }\r\n};\r\n",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <v-tabs>\r\n      <v-tab>\r\n        <v-icon left>view_list</v-icon>Products List\r\n      </v-tab>\r\n      <v-tab>\r\n        <v-icon left>store</v-icon>Shops List\r\n      </v-tab>\r\n\r\n      <v-tab-item>\r\n        <v-card flat>\r\n          <v-container>\r\n            <v-row>\r\n              <Products v-on:aggrigateData=\"aggrigateData()\" />\r\n            </v-row>\r\n          </v-container>\r\n        </v-card>\r\n      </v-tab-item>\r\n      <v-tab-item>\r\n        <v-card flat>\r\n          <v-container> <div v-if=\"arrAggrigatedData\">\r\n            <v-card class=\"mx-auto\" max-width=\"400\" tile></v-card>\r\n           \r\n            <v-list-item v-for=\"agg in arrAggrigatedData\" :key=\"agg.store\">\r\n              <v-list-item-content>\r\n                <v-list-item-title>\r\n                  <span v-if=\"agg.sum > 0\">\r\n                    <b>{{agg.store}}</b>\r\n                    : $ {{agg.sum}}\r\n                  </span>\r\n                </v-list-item-title>\r\n              </v-list-item-content>\r\n            </v-list-item>\r\n            </div>\r\n            <div v-else>There is no aggrigated data yet. please REMOVE products...</div>\r\n          </v-container>\r\n        </v-card>\r\n      </v-tab-item>\r\n    </v-tabs>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport Products from \"@/components/Products\";\r\nexport default {\r\n  components: { Products },\r\n  data: () => ({\r\n    arrAggrigatedData: null\r\n  }),\r\n  mounted(){\r\n    this.aggrigateData()\r\n  },\r\n  methods: {\r\n    aggrigateData() {\r\n      let products = (this.products = this.$store.state.products);\r\n      let stores = [...new Set(products.map(p => p.store))];\r\n\r\n      let arr = [];\r\n      stores.forEach(store => {\r\n        let sum = 0;\r\n        for (let i = 0; i < products.length; i++) {\r\n          if (store == products[i].store) {\r\n            if (products[i].selected) {\r\n              sum += products[i].priceUsd;\r\n            }\r\n          }\r\n        }\r\n        let obj = {\r\n          store: store,\r\n          sum: sum\r\n        };\r\n        arr.push(obj);\r\n      });\r\n      this.arrAggrigatedData = arr;\r\n    }\r\n  },\r\n  beforeCreate() {\r\n    this.$store.dispatch(\"changeShowSelectedProducts\", false);\r\n  }\r\n};\r\n</script>"]}]}